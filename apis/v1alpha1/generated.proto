/*
this is the Mebius Project
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.LTitan.Mebius.apis.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/LTitan/Mebius/apis/v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusters
// +kubebuilder:resource:shortName=cluster
// +kubebuilder:subresource:status
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message Cluster {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterSpec spec = 2;

  optional ClusterStatus status = 3;
}

message ClusterCondition {
  optional string type = 1;

  optional string status = 2;

  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time creat_time = 3;

  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time update_time = 4;
}

// +kubebuilder:object:root=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Cluster items = 2;
}

message ClusterSpec {
  // +optional
  map<string, string> attributes = 1;
}

message ClusterStatus {
  repeated ClusterCondition condition = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=machines
// +kubebuilder:resource:shortName=machine
// +kubebuilder:subresource:status
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message Machine {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MachineSpec spec = 2;

  optional MachineStatus status = 3;
}

message MachineAddress {
  optional string type = 1;

  optional string address = 2;
}

message MachineCondition {
  optional string type = 1;

  optional string status = 2;

  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time last_heartbeat_time = 3;

  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time last_transition_time = 4;

  // +optional
  optional string reason = 5;

  // +optional
  optional string message = 6;
}

message MachineDaemonEndpoint {
  optional int32 port = 1;
}

// +kubebuilder:object:root=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message MachineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Machine items = 2;
}

message MachineMebiusEndpoint {
  optional int32 port = 1;
}

message MachineSpec {
  // Whether the Machine can use Mebius to perform operations.
  // The default false indicates that the machine can accept operations on the Mebius server.
  // +optional
  optional bool unschedulable = 1;

  // Whether Machine can be clustered.
  // The default value is false.
  // +optional
  optional bool unclusterable = 2;

  // Refer to the taints mechanism of k8s.
  // +optional
  repeated k8s.io.api.core.v1.Taint taints = 3;

  // Flags which cluster the machine expects to join.
  // The default value is null, meaning it does not want to join any cluster.
  // +optional
  optional string desired_cluster = 4;

  // Flag the role Machine expects to become in the Cluster.
  // The default is Vagrant, meaning it does not join the Cluster.
  // +optional
  optional string desired_role = 5;
}

message MachineStatus {
  // Records the port of the agent.
  // +optional
  optional MachineMebiusEndpoint mebius_endpoint = 1;

  // Records the ports of daemons enabled by the agent.
  // +optional
  repeated MachineDaemonEndpoint daemon_endpoints = 2;

  // Various stages of machine.
  // +optional
  optional string phase = 3;

  // Conditions of the Machine (agent running properly, memory pressure free, disk pressure free, network reachable).
  // +optional
  repeated MachineCondition conditions = 4;

  // Information about the Machine system to be reported by the agent.
  // +optional
  optional MachineSystemInfo machine_info = 5;

  // Machine address, a variety of types, temporarily on a LAN IP is almost.
  // TODO: If the Agent supports the IPIP tunnel, it can also use non-LAN IP addresses to remove Layer 2 reachability
  // +optional
  repeated MachineAddress addresses = 6;

  // The cluster that machine actually joins.
  // +optional
  optional string owner_cluster = 7;

  // The role of Machine in the Cluster.
  // If Machine does not join the Cluster, it is positioned as Vagrant.
  // +optional
  optional string machine_role = 8;
}

message MachineSystemInfo {
  // MachineID reported by the machine. For unique machine identification
  // in the cluster this field is preferred. Learn more from man(5)
  // machine-id: <http://man7.org/linux/man-pages/man5/machine-id.5.html>
  optional string machine_id = 1;

  optional string kernel_version = 2;

  optional string operation_system = 3;

  optional string architecture = 4;
}

